export default "#version 300 es\n#define GLSLIFY 1\n\nuniform mat4 uWorldMatrix;\nuniform mat4 uViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform vec3 uCameraPosition;\nuniform vec4 uRotationAxisVelocity;\n\nin vec3 aModelPosition;\nin vec3 aModelNormal;\nin vec2 aModelUvs;\nin mat4 aInstanceMatrix;\n\nout vec2 vUvs;\nout float vAlpha;\n\nvoid main() {\n    vec4 worldPosition = aInstanceMatrix * uWorldMatrix * vec4(aModelPosition, 1.);\n\n    \n    vec4 discOriginPos = aInstanceMatrix * uWorldMatrix * vec4(0., 0., 0., 1.);\n    float radius = length(discOriginPos.xyz);\n    vec3 velocityDirection = cross(discOriginPos.xyz, uRotationAxisVelocity.xyz);\n    vec3 relativeVertexPos = worldPosition.xyz - discOriginPos.xyz;\n    float offsetStrength = dot(velocityDirection, relativeVertexPos);\n    offsetStrength = uRotationAxisVelocity.w * offsetStrength * 2.;\n    worldPosition.xyz += velocityDirection * offsetStrength;\n    worldPosition.xyz = radius * normalize(worldPosition.xyz);\n\n    gl_Position = uProjectionMatrix * uViewMatrix * worldPosition;\n\n    vAlpha = pow(normalize(worldPosition.xyz).z, 1.);\n    vUvs = aModelUvs;\n}"